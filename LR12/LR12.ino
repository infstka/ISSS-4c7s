#include <LiquidCrystalRus.h>
 // на диоде, защищающем от неверной полярности, падает доля
// напряжения (англ. voltage drop). Необходимо это учитывать
#define DIODE_DROP 0.7
// Объявляем объект, для управления дисплеем. Для его создания
// необходимо указать номера пинов, к которым он подключен в
// порядке: RS E DB5 DB6 DB7 DB8
LiquidCrystalRus lcd(13, 12, 11, 10, 9, 8);
// Объявляем переменную для хранения текущей позиции бегущей строки
int scrollPos = 0;
void setup() {
  // начинаем работу с экраном. Сообщаем объекту количество
  // строк и столбцов. Опять же, вызывать pinMode не требуется:
  // функция begin сделает всё за нас
  lcd.begin(16, 2);
}
void loop() {
  // высчитываем напряжение подключенной батарейки
  // если напряжение на делителе напряжения было зафиксировано,
  // нужно прибавить напряжение на диоде, т.к. оно было съедено

  // устанавливаем курсор, колонку 0, строку 0. На деле — это
  // левый квадрат 1-й строки, т.к. нумерация начинается с нуля
  lcd.setCursor(scrollPos, 1);
  // печатаем сообщение на первой строке

  lcd.print(" Бобрович");
  // устанавливаем курсор на вторую строку в позицию scrollPos

  // печатаем сообщение на второй строке
  lcd.print(" Лапковский");
  // увеличиваем scrollPos на единицу для следующего цикла
  scrollPos++;
  // если scrollPos превышает ширину экрана (16 символов), то обнуляем его
  if (scrollPos > 16) {
    scrollPos = 0;
  }
  // задерживаемся на 200 миллисекунд для плавности анимации
  delay(200);
}